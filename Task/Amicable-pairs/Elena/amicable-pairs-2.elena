import extensions.
import system'routines'stex.
import system'math.
import system'collections.

const int Limit = 20000.

extension op
{
    properDivisors
        = Range new(1,self / 2); filterBy(:n)<int,bool>(self mod:n == 0).

    amicablePairs
    [
        auto divsums := List<int>(Range new(0, self); selectBy(:i)<int,int>(i properDivisors; summarize)).

        ^ Range from:1 till(divsums length);
            filterBy(:i)<int,bool>
            [
                var sum := divsums[i].
                ^ (i < sum) && (sum < divsums length) && (divsums[sum] == i)
            ];
            selectBy(:i)<int,Tuple<int,int>>(Tuple<int,int>(i,divsums[i])).
    ]
}

public program
[
    Limit amicablePairs; forEach(:pair)<Tuple<int,int>>
    [
        console printLine(pair item1, " ", pair item2).
    ]
]
