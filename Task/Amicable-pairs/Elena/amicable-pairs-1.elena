import extensions.
import system'routines.
import system'math.

const int Limit = 20000.

extension op
{
    properDivisors
        = Range new(1,self / 2); filterBy(:n)(self mod:n == 0).

    amicablePairs
    [
        var divsums := Range new(0, self); selectBy(:i)(i properDivisors; summarize(Integer new)); toArray.

        ^ 1 repeatTill(divsums length);
            filterBy(:i)
            [
                var sum := divsums[i].
                ^ (i < sum) && (sum < divsums length) && (divsums[sum] == i)
            ];
            selectBy(:i)({ item1 = i. item2 = divsums[i]. }).
    ]
}

public program =
[
    Limit amicablePairs; forEach(:pair)
    [
        console printLine(pair item1, " ", pair item2).
    ]
].
