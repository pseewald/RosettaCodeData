void
rref(list l, integer rows, integer columns)
{
    integer e, f, i, j, lead, r;
    list u, v;

    lead = 0;
    r = 0;
    while (r < rows) {
        if (columns <= lead) {
            break;
        }

        i = r;
        while (!l_q_list(l, i)[lead]) {
            i += 1;
            if (i == rows) {
                i = r;
                lead += 1;
                if (lead == columns) {
                    break;
                }
            }
        }
        if (lead == columns) {
            break;
        }

        u = l[i];

        l.spin(i, r);
        e = u[lead];
        if (e) {
            for (j, f in u) {
                u[j] = f / e;
            }
        }

        for (i, v in l) {
            if (i != r) {
                e = v[lead];
                for (j, f in v) {
                    v[j] = f - u[j] * e;
                }
            }
        }

        lead += 1;

        r += 1;
    }
}

void
display_2(list l)
{
    list u;

    for (, u in l) {
        u.ucall(o_winteger, -1, 4);
        o_byte('\n');
    }
}

integer
main(void)
{
    list l;

    l = list(list(1, 2, -1, -4),
             list(2, 3, -1, -11),
             list(-2, 0, -3, 22));
    rref(l, 3, 4);
    display_2(l);

    return 0;
}
