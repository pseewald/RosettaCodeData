import extensions.

singleton AksTest
{
    static Array<long> c := V<long>(100).

    coef(int n)
    [
        int i := 0.
        int j := 0.

        if ((n < 0) || (n > 63)) [ AbortException new; raise ]. // gracefully deal with range issue

        c[i] := 1l.
        while(i < n)
        [
            j := i.
            c[1 + j] := 1l.
            while (j > 0)
            [
                c[j] := c[j - 1] - c[j].

                j -= 1
            ].

            c[0] := c[0] negative.
            i += 1
        ].

        var t := c.
    ]

    bool is_prime(int n)
    [
        int i := n.

        self coef(n).
        (c[0]) += 1.
        (c[i]) -= 1.

        i -= 1.
        while ((i + 1 != 0) && (c[i+1] mod(n) == 0))
        [
            i -= 1
        ].

        ^ i < 0
    ]

    show(int n)
    [
        int i := n.
        i += 1.
        while(i != 0)
        [
            i -= 1.
            console print("+",c[i],"x^",i).
        ]
    ]
}

public program
[
    0 till:10 do(:n)<int>
    [
        AksTest coef(n).

		console print("(x-1)^",n," = ").
		AksTest show(n).
        console printLine.
    ].
    console print("Primes:").
    1 to(63) do(:n)<int>
    [
        if (AksTest is_prime(n))
        [
            console print(n," ").
        ]
    ].

    console printLine; readChar
]
