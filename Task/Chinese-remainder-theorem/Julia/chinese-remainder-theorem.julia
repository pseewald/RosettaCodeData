function chineseremainder(n::Array{Int}, a::Array{Int})
    sum = 0
    prd = prod(n)
    for (ni, ai) in zip(n, a)
        p   = prd รท ni
        sum += ai * mulinv(p, ni) * p
    end
    return sum % prd
end

function mulinv(a::Int, b::Int)
    @assert(a % b != 0, "$a is multiple of $b")
    @assert(b % a != 0, "$b is multiple of $a")
    b0 = b
    x0, x1 = 0, 1
    if b == 1 return 1 end
    while a > 1
        q = a รท b
        a, b = b, a % b
        x0, x1 = x1 - q * x0, x0
    end
    if x1 < 0 x1 += b0 end
    return x1
end

@show chineseremainder([3, 5, 7], [2, 3, 2])
